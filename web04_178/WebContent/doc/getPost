
2020-05-07


request 메서드 - get , post


< * get 요청 * > 
-웹 브라우저 주소창에 url을 입력하는 경우
-a태그 링크를 클릭하는 경우
-입력 폼(form)의 method 속성값이 get인 경우
get방식으로 요청한 데이터 전달 형식
http://localhost:port/컨텍스트 루트 context root(프로젝트명)/경로?인풋네임=value&다른인풋네임=value&다른inputName=value
-> 256자 제한

< get 요청의 쓰임새 >
자료를 검색한다거나, 게시글의 상세 정보를 본다거나, 특정 상품의 정보를 
조회하는 것과 같이 데이터를 조회*하는 경우에 적합하다. 
URL에 검색어나 게시글 번호, 상품번호를 포함할 수 있기 때문에 
메일이나 단문 메시지 등을 통해 다른 사람에게 전달하기가 쉽다. 
또한 즐겨찾기에 저장해 두면 언제든지 해당 페이지로 바로 찾아갈 수 있어
매우 편리하다. 
* 결과 화면을 보관하거나 공유하고 싶다면 get 요청

< 문제점과 개선방안 >
- 보안에 좋지 않다. 
웹 브라우저의 주소창에 사용자가 입력한 정보가 그대로 노출되기 때문에 
보안문제가 발생할 수 있다. 
또한 즐겨찾기, 책갈피로 저장될 수 있어 다른 사람에게 노출될 우려도 존재한다. 
따라서 로그인이나 개인정보 관리와 같은 보안을 요구하는 경우에는 
get 방식을 사용하면 안된다. 

- 바이너리 데이터를 전송할 수 없다. 
get 방식으로 작업이 완전히 불가능한 경우도 있다. 
바이너리 파일을 전송하는 경우이다. 
이미지나 동영상과 같은 바이너리 파일의 데이터는 url에 붙여서 보낼 수 없다. 
url이나 헤더 정보가 너무 크면 웹 서버에서 처리할 수 없기 때문에 
바이너리를 전송하기에는 get 요청은 적합하지 않다. 

요청을 간단하게 하기 위한 것으로 헤드에 포함되는 내용의 크기가 제한적이다.
아파치 웹 서버는 8KB로 제한하고 있다. (헤더 필드의 최대 크기)




< * POST 요청 * >
url에 데이터가 포함되지 않음 -> 외부 노출 방지 
메시지본문에 데이터 포함 -> 실행 경과 공유 불가
바이너리 및 대용량 데이터 전송 가능

장점 
- 입력값을 url에 노출하지 않는다. 

단점
- 요청 결과를 공유할 수 없다. 
 
로그인이나 결제정보를 서버에 보낼 때는 get 대신 post 방식으로 
요청을 보내야 한다. 
post 형식은 웹 서버에 데이터를 보낼 때 메시지(정보)를 본문에 
붙여서 보내기 때문에 주소창에 노출될 위험이 없다. 
또한 보내는 데이터의 크기에 제한이 없다. 
 
일반적으로 <form>을 이용하여 전송데이터를 서버로 보낼 때 사용한다. 
 
 
 






2020-05-11

jdbc 연결 및 db 데이터 다루는 법
jdbc api를 이용하여 데이터베이스에
연결하고, 질의하고, 결과를 가져오는 서블릿을 만들어 보았다. 
( "API(Application Programming Interface, 응용 프로그램 프로그래밍 인터페이스)는 
	응용 프로그램에서 사용할 수 있도록, 
	운영체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 뜻한다.”)

데이터를 등록(create), 조회(retrieve), 변경(update), 삭제(delete)
이를 CRUD라고 부른다. 
기업에서 사용하는 대부분의 업무 지원 프로그램들이 이런 CRUD 위주의 작업들로
이루어져 있다. 

HTTP 프로토콜의 요청(method) 형식 중에서 GET과 POST 요청을
다루는 방법에 대해 알아 보았다. 
데이터 조회나 삭제 요청처럼 간단한 데이터를 보내는 경우에는 GET 방식이 적합하고 
데이터 등록이나 변경, 로그인과 같은 *대량의 데이터를 보내거나*
브라우저의 주소창에 *노출되지 말아야* 할 데이터를 보내는 경우에는 POST 방식이 적합하다.

특히 HttpServlet*를 상속받아 서블릿을 만들면 get과 post요청을 쉽게 구분하여 처리할 수 있다. 

회원 정보 등록을 구현할 때, 우리는 클라이언트에 보낸 한글데이터가 깨지는 것을 경험하였다. 
이것은 서블릿에서 데이터를 꺼낼 때 클라이언트가 보낸 데이터를 
ISO-8859-1 이라 정하고 유니코드로 변환하기 때문이다. 
이를 교정하려면 getParameter()를 호출하여 데이터를 꺼내기 전*에
setCharacterEncoding()을 호출하여 클라이언트가 보낸 데이터가 
UTF-8임을 먼저 지정해야 한다. 

리프레시와 리다이렉트의 차이점은 *리프레시는 클라이언트에 본문을 보낸다는 것*이고, 
*리다이렌트는 본문을 보내지 않는다는 것*이다. 
사용자에게 요청 결과를 잠깐이라도 출력하고 다른 페이지로 이동한다면 리프레시 방법 추천

특정 서블릿에서 사용할 정보라면 서블릿 초기화 매개변수를 사용하고, 
여러 서블릿에서 공통으로 사용할 정보라면 컨텍스트(전역) 초기화 매개변수를 사용하자 



--예전방식--
1997
only servlet
계층구조
라이프 사이클
url 매핑

